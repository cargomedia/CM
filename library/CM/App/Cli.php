<?php

class CM_App_Cli extends CM_Cli_Runnable_Abstract {

	public function setup() {
		$application = CM_App::getInstance();
		$this->_getOutput()->writeln('Setting up filesystem…');
		$application->setupFilesystem();
		$this->_getOutput()->writeln('Setting up database…');
		$application->setupDatabase();
	}

	public function deploy() {
		$app = CM_App::getInstance();
		$output = $this->_getOutput();
		$output->writeln('Setting up filesystem…');
		$app->setupFilesystem();

		$output->writeln('Running database updates…');
		$app->runUpdateScripts(function ($version) use ($output) {
			$output->writeln('  Running update ' . $version . '…');
		});

		$output->writeln('Warming up caches…');
		$app->fillCaches();

		$app->setReleaseStamp();
	}

	public function generateConfig() {
		// Create class types and action verbs config PHP
		$fileHeader = '<?php' . PHP_EOL;
		$fileHeader .= '// This is autogenerated action verbs config file. You should not adjust changes manually.' . PHP_EOL;
		$fileHeader .= '// You should adjust TYPE constants and regenerate file using `config generate` command' . PHP_EOL;
		$path = DIR_ROOT . 'resources/config/internal.php';
		$classTypesConfig = CM_App::getInstance()->generateConfigClassTypes();
		$actionVerbsConfig = CM_App::getInstance()->generateConfigActionVerbs();
		CM_File::create($path, $fileHeader . $classTypesConfig . PHP_EOL . PHP_EOL . $actionVerbsConfig . PHP_EOL);
		$this->_getOutput()->writeln('Created `' . $path . '`');

		// Create model class types and action verbs config JS
		$path = DIR_ROOT . 'resources/config/js/internal.js';
		$modelTypesConfig = 'cm.model.types = ' . CM_Params::encode(CM_App::getInstance()->getClassTypes('CM_Model_Abstract'), true) . ';';
		$actionVerbs = array();
		foreach (CM_App::getInstance()->getActionVerbs() as $verb) {
			$actionVerbs[$verb['name']] = $verb['value'];
		}
		$actionVerbsConfig = 'cm.action.verbs = ' . CM_Params::encode($actionVerbs, true) . ';';
		CM_File::create($path, $modelTypesConfig . PHP_EOL . $actionVerbsConfig . PHP_EOL);
		$this->_getOutput()->writeln('Created `' . $path . '`');
	}

	public static function getPackageName() {
		return 'app';
	}
}
