.textinput {
	.appearance(none);
	.box-sizing(border-box);
	width: 100%;
	height: @heightInputText;
	overflow: hidden;
	padding-left: 6px;
	padding-right: 6px;
	border-radius: 0;
	background: @colorBg;
	border: 1px solid @colorFgBorderEmphasize2;
	.transition(.1s);

	&:hover {
		border-left: 1px solid lighten(@colorNotice, 15);
	}
}

textarea.textinput {
	height: @heightInputTextarea;
	padding-top: 7px;
	overflow: auto;
	resize: vertical;
}

select {
	border: 1px solid @colorFgBorderEmphasize3;
	max-width: 100%;
}

.placeholder(@color) {
	::-webkit-input-placeholder {
		color: @color;
	}
	:-moz-placeholder { // < FF 19
		color: @color;
	}
	::-moz-placeholder {
		color: @color;
	}
	:-ms-input-placeholder {
		color: @color;
	}
	label.placeholder {
		color: @color;
		margin-top: 7px;

		.CM_FormField_Textarea & {
			margin-top: 1px;
		}
	}
}

.placeholder(lighten(@colorFgShy, 10));

.button {
	.box-sizing(border-box);
	width: auto;
	height: @sizeButton;
	min-width: @sizeButton;
	max-width: 100%;
	overflow: hidden;
	margin: 1px;
	font-weight: bold;
	cursor: pointer;
	vertical-align: top;
	white-space: nowrap;
	border-radius: 0;
	.transition(.1s);
	padding: 0 8px;

	&:active {
		.box-shadow(inset 0 3 5px rgba(0, 0, 0, 0.125));
	}

	&:focus {
		.input_focus;
	}

	&:disabled {
		opacity: .5;
	}
}

.button.hasIcon {
	padding: 0;

	&.hasLabel {
		padding: 0 8px;

		.icon {
			margin-right: 5px;
		}
	}
}

.button.hasIconRight.hasLabel {
	padding: 0 1px 0 8px;
}

.button.confirmClick {
	.button-success;
}

.button.confirmClick.warning {
	.button-danger;
}

.button-default-active {
	.gradient(vertical, darken(@colorBgButtonDefault, 12), darken(@colorBgButtonDefault, 12));
}

.button-default {
	border: 1px solid @colorFgBorderEmphasize3;
	.gradient(vertical, @colorBgButtonDefault, darken(@colorBgButtonDefault, 6));
	color: lighten(@colorFg, 25);
	text-shadow: 1px 1px fadeout(@colorFgTheme, 80);

	&:hover {
		border: 1px solid darken(@colorFgBorderEmphasize3, 10);
		.gradient(vertical, @colorBgButtonDefault, darken(@colorBgButtonDefault, 12));
		color: @colorFg;
	}

	&:active {
		.button-default-active;
	}
}

.button-highlight {
	border: 1px solid spin(@colorBgButtonHighlight, -3);
	background-color: @colorBgButtonHighlight;
	.gradient(vertical, @colorBgButtonHighlight, spin(@colorBgButtonHighlight, -3));
	color: @colorFgTheme;
	text-shadow: 1px 1px spin(@colorBgButtonHighlight, -8);

	&:hover {
		.gradient(vertical, spin(@colorBgButtonHighlight, -2), spin(@colorBgButtonHighlight, -8));
		color: @colorFgTheme;
	}

	&:active {
		border-color: spin(@colorBgButtonHighlight, -15);
		background: spin(@colorBgButtonHighlight, -12);
	}
}

.button-success {
	border: 1px solid lighten(@colorOk, 3);
	.gradient(vertical, lighten(@colorOk, 9), lighten(@colorOk, 3));
	color: @colorFgTheme;
	text-shadow: 1px 1px spin(@colorOk, -8);

	&:hover {
		.gradient(vertical, lighten(@colorOk, 6), @colorOk);
		color: @colorFgTheme;
	}

	&:active {
		border-color: darken(@colorOk, 6);
		background: @colorOk;
	}
}

.button-danger {
	border: 1px solid @colorError;
	.gradient(vertical, lighten(@colorError, 10), @colorError);
	color: @colorBg;
	text-shadow: 1px 1px @colorError;

	&:hover {
		.gradient(vertical, lighten(@colorError, 6), darken(@colorError, 6));
		color: @colorFgTheme;
	}

	&:active {
		border-color: darken(@colorError, 12);
		background: darken(@colorError, 6);
	}
}

.button-large {
	height: 1.5*@sizeButton;
	min-width: 1.5*@sizeButton;
	font-size: 2em;
	border-radius: 3px;
	padding: 0 15px;

	&.hasIcon.hasLabel {
		padding: 0 20px 0 10px;

		.icon {
			margin-right: 10px;
			font-size: 1em;
		}
	}
}

input:disabled {
	opacity: .5;
}

input:focus, textinput:focus, .textinput.focus, select:focus, textarea:focus {
	.input_focus;
}

input[type=checkbox], input[type=radio] {
	position: absolute;
	opacity: 0;

	+ label {
		position: relative;
		cursor: pointer;
		margin-left: 1.5em;

		&:before {
			position: absolute;
			content: "";
			display: block;
			width: 1em;
			height: 1em;
			background-color: @colorBgEmphasize1;
			top: 0;
			left: -1.5em;
			border: 1px solid @colorFgBorderEmphasize3;
		}
	}

	&:hover, &:focus {

		&:not(:disabled) + label:before {
			.input_focus;
		}
	}

	&:checked + label:before {
		background-color: lighten(@colorNotice, 15);
		border-color: lighten(@colorNotice, 15);
	}

	&:disabled + label {
		opacity: .5;
	}

}

input[type=radio] {
	&:checked + label:before {
		box-shadow: inset 0 0 0 .2em @colorBgEmphasize1;
	}

	+ label {
		&:before {
			border-radius: 50%;
		}
	}
}

input[type=checkbox] {
	&:checked + label:before {
		background-image: image('checkbox.svg');

		html.no-svg & {
			background-image: image('checkbox.png');
		}
		.background-size(contain);
	}

	+ label {
		&:before {
			border-radius: 20%;
		}
	}
}


.formField, .formAction {
	.box-sizing(border-box);
	padding: 6px;
}

.formField {
	> label {
		.box-sizing(border-box);
		color: @colorFgLinkLight;
		font-weight: bold;
		padding-left: 2px;

		@media (min-width: 600px) {
			width: 100px;
			float: left;
			padding-top: (@heightInputText - @fontSize * @fontLineHeight) / 2;
			text-align: right;
		}

		&:after {
			content: ":";
		}

		.CM_FormField_Abstract {
			float: left;
			margin-right: 3px;
		}
	}

	> .input {

		@media (min-width: 600px) {
			margin-left: 110px;
		}
	}

	&.noLabel > .input {
		margin-left: 0;
	}
}

.formAction {
	text-align: right;

	.formAction-alternatives {
		float: left;
	}
}

.messages {
	display: block;

	.form_field_error {
		.error;
		display: inline-block;
		margin: 4px 0 0;
		padding: 3px 7px;
	}
}
