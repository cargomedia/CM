.textinput {
  .appearance(none);
  box-sizing: border-box;
  width: 100%;
  height: @heightInputText;
  overflow: hidden;
  padding-left: 10px;
  padding-right: 10px;
  border-radius: @borderRadiusInput;
  background: @colorInputBg;
  border: 1px solid @colorInputBorder;
  transition: border-color .1s;
}

textarea.textinput {
  height: @heightInputTextarea;
  padding-top: (@heightInputText - @fontSize*@fontLineHeight) / 2;
  overflow: auto;
  resize: vertical;
}

.input_focus {
  outline: none;
  border-color: @colorInputFocus;
}

.placeholder(@color) {
  ::-webkit-input-placeholder {
    color: @color;
  }
  ::-moz-placeholder {
    color: @color;
    opacity: 1;
  }
  :-ms-input-placeholder {
    color: @color;
  }
}

.placeholder(@colorInputPlaceholder);

.button {
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  width: auto;
  height: @sizeButton;
  min-width: @sizeButton;
  max-width: 100%;
  margin: 1px;
  padding: 0 1em;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  border-radius: @borderRadiusButton;
  vertical-align: top;
  letter-spacing: 1px;
  cursor: pointer;
  transition: background-color 200ms;
  font-size: @fontSizeButton;

  &:focus {
    .input_focus;
  }

  &:disabled {
    .icon, .label {
      opacity: .5;
    }
  }

  &.hasIcon:not(.hasLabel) {
    padding: 0;
  }

  &.hasIcon.hasLabel .icon {
    margin-right: .4em;
  }

  &.hasIconRight.hasLabel .icon {
    margin-left: .4em;
  }

  a&, div& {
    line-height: @sizeButton - 2*@buttonBorderWidth;
    text-align: center;
  }
}

.button.confirmClick {
  .button-success;
}

.button.confirmClick.warning {
  .button-danger;
}

.button-default-active {
  background: darken(@colorBgButton, 5);
  color: @fontColorHeading;
}

.button-default {
  background-color: @colorBgButton;
  border: 1px solid @colorFgButtonBorder;
  color: @colorFgButton;

  &.active {
    .button-default-active;
  }
}

.button-transparent-active {
  color: @fontColorHeading;
}

.button-transparent {
  background: none;
  border: 1px solid transparent;
  color: @colorFgButton;
}

.button-highlight {
  background-color: @colorBgButtonHighlight;
  border: 1px solid @colorBgButtonHighlight;
  color: @colorFgButtonHighlight;
}

.button-success {
  background-color: @colorBgButtonSuccess;
  border: 1px solid @colorBgButtonSuccess;
  color: @colorFgButtonSuccess;
}

.button-danger {
  background-color: @colorBgButtonDanger;
  border: 1px solid @colorBgButtonDanger;
  color: @colorFgButtonDanger;
}

.button-large {
  height: @sizeButtonLargeFactor*@sizeButton;
  min-width: @sizeButtonLargeFactor*@sizeButton;
  font-size: @sizeButtonLargeFactor*@fontSizeButton;
  border-radius: @sizeButtonLargeFactor*@borderRadiusButton;

  a& {
    line-height: @sizeButtonLargeFactor*@sizeButton - 2*@buttonBorderWidth;
  }
}

input:disabled {
  opacity: .5;
}

input:focus, .textinput:focus, .textinput.focus, select:focus, textarea:focus {
  .input_focus;
}

input[type=checkbox], input[type=radio] {
  .appearance(none);
  display: block;
  position: absolute;
  width: @sizeCheckbox;
  height: @sizeCheckbox;
  transform: scale(2);
  transform-origin: 0 0;
  opacity: 0;

  + label {
    position: relative;
    cursor: pointer;
    margin-left: @sizeCheckbox+4px;

    &::before {
      box-sizing: border-box;
      position: absolute;
      content: "";
      display: block;
      width: @sizeCheckbox;
      height: @sizeCheckbox;
      background-color: @colorInputBg;
      top: 50%;
      left: -(@sizeCheckbox+4px);
      margin-top: -@sizeCheckbox/2;
      border: 1px solid @colorInputBorder;
      transition: 100ms;
    }
  }

  &:focus {
    &:not(:disabled) + label::before {
      .input_focus;
    }
  }

  &:checked + label::before {
    background-color: @colorInputFocus;
    border-color: @colorInputFocus;
  }

  &:disabled + label {
    opacity: .5;
  }
}

input[type=radio] {
  &:checked + label::before {
    box-shadow: inset 0 0 0 .2em @colorInputBg;
  }

  + label {
    &::before {
      border-radius: 50%;
    }
  }
}

input[type=checkbox] {
  &:checked + label::before {
    background-image: image('checkbox.svg');
    background-size: contain;
  }

  + label {
    &::before {
      border-radius: 20%;
    }
  }
}

input[type=checkbox].checkbox-switch {
  @sizeSwitch: @sizeCheckbox;

  + label {
    margin-left: 0;

    .handle {
      box-sizing: border-box;
      position: relative;
      display: inline-block;
      width: 1.6 * @sizeSwitch;
      height: @sizeSwitch;
      margin-right: 5px;
      vertical-align: middle;
      border: 1px solid @colorInputBorder;
      background-color: @colorInputBorder;
      border-radius: .5 * @sizeSwitch;
      box-shadow: 0 .1em .1em rgba(0, 0, 0, 0.02) inset;

      &::after {
        box-sizing: border-box;
        position: absolute;
        top: 0;
        left: 0;
        content: '';
        width: @sizeSwitch - 4px;
        height: @sizeSwitch - 4px;
        margin: 1px;
        border: 1px solid @colorInputBg;
        border-radius: 50%;
        background-color: @colorInputBg;
        transform: translateX(0);
        transition: 200ms;
      }
    }

    .label {
      vertical-align: middle;
    }

    &::before {
      display: none;
    }
  }

  &:checked + label .handle {
    background-color: @colorInputFocus;
    border-color: @colorInputFocus;

    &::after {
      transform: translateX(0.6 * @sizeSwitch);
      background-color: @colorInputBg;
      border-color: @colorInputBg;
    }
  }

  &:focus + label .handle {
    border-color: @colorInputFocus;
  }
}

.formField, .formAction {
  padding-top: 5px;
  padding-bottom: 5px;
}

.formField {
  > label {
    display: block;
    margin-bottom: 5px;
    padding-left: 2px;
    color: lighten(@colorInputFg, 20);
    font-weight: bold;

    &::after {
      content: ":";
    }
  }

  &:not(:first-child) > label {
    margin-top: 5px;
  }
}

.formAction {
  text-align: right;

  .formAction-alternatives {
    float: left;
  }
}

.messages {
  display: block;

  .formField-error {
    display: none;
    color: @colorError;
    padding: 2px;
  }
}
