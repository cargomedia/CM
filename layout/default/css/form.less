.textinput {
  .appearance(none);
  width: 100%;
  height: @heightInputText;
  overflow: hidden;
  padding-left: 6px;
  padding-right: 6px;
  border-radius: 0;
  background: @colorBg;
  border: 1px solid @colorFgBorderEmphasize2;
  .transition(.1s);

  &:hover {
    border-left: 1px solid lighten(@colorNotice, 15);
  }
}

textarea.textinput {
  height: @heightInputTextarea;
  padding-top: 6px;
  overflow: auto;
  resize: vertical;
}

.input_focus {
  outline: none;
  border: 1px solid lighten(@colorNotice, 15);
}

.placeholder(@color) {
  ::-webkit-input-placeholder {
    color: @color;
  }
  :-moz-placeholder {
    // < FF 19
    color: @color;
  }
  ::-moz-placeholder {
    color: @color;
  }
  :-ms-input-placeholder {
    color: @color;
  }
  label.placeholder {
    color: @color;
    margin-top: 7px;

    .CM_FormField_Textarea & {
      margin-top: 1px;
    }
  }
}

.placeholder(lighten(@colorFgSubtle, 10));

.button {
  width: auto;
  height: @sizeButton;
  line-height: @sizeButton - 2px;
  min-width: @sizeButton;
  max-width: 100%;
  padding: 0 8px;
  overflow: hidden;
  margin: 1px;
  font-weight: bold;
  cursor: pointer;
  vertical-align: top;
  white-space: nowrap;
  border-radius: 0;
  background-size: auto 200%;
  background-position: 0 0;
  .transition(background-position 200ms);

  &:not(:disabled):active {
    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  }

  &:not(:disabled):hover {
    background-position: 0 100%;
  }

  &:focus {
    .input_focus;
  }

  &:disabled {
    opacity: .5;
  }

  &.hasIcon {
    padding: 0;

    &.hasLabel {
      padding: 0 8px;

      .icon {
        margin-right: 5px;
      }
    }
  }

  &.hasIconRight.hasLabel .icon {
    margin-left: 5px;
  }
}

.button.confirmClick {
  .button-success;
  .animation(clickConfirm, 3000ms, ease-out, 0, 1);
}

.button.confirmClick.warning {
  .button-danger;
}

.button-default-active {
  background: darken(@colorBg, 8);
}

.button-default {
  .gradient(vertical, @colorBg, darken(@colorBg, 10));
  border: 1px solid @colorFgBorderEmphasize3;
  color: lighten(@colorFg, 25);
  text-shadow: 1px 1px fadeout(@colorFgTheme, 80);

  &:not(:disabled):active {
    border-color: darken(@colorFgBorderEmphasize3, 5);
  }
}

.button-transparent {
  background: none;
  border: 1px solid transparent;
}

.button-highlight {
  .gradient(vertical, @colorHighlight, spin(@colorHighlight, -6));
  border: 1px solid spin(@colorHighlight, -3);
  color: @colorFgTheme;
  text-shadow: 1px 1px spin(@colorHighlight, -8);

  &:not(:disabled):active {
    border-color: spin(@colorHighlight, -15);
  }
}

.button-success {
  .gradient(vertical, lighten(@colorOk, 9), lighten(@colorOk, 3));
  border: 1px solid lighten(@colorOk, 3);
  color: @colorFgTheme;
  text-shadow: 1px 1px spin(@colorOk, -8);

  &:not(:disabled):active {
    border-color: darken(@colorOk, 6);
  }
}

.button-danger {
  .gradient(vertical, lighten(@colorError, 10), @colorError);
  border: 1px solid @colorError;
  color: @colorFgTheme;
  text-shadow: 1px 1px @colorError;

  &:not(:disabled):active {
    border-color: darken(@colorError, 12);
  }
}

.button-large {
  height: 1.5*@sizeButton;
  min-width: 1.5*@sizeButton;
  font-size: 2em;
  border-radius: 3px;
  padding: 0 15px;

  &.hasIcon.hasLabel {
    padding: 0 20px 0 10px;

    .icon {
      margin-right: 10px;
      font-size: 1em;
    }
  }
}

label {
  //Fix for fastclick
  > * {
    pointer-events: none;
  }
}

input:disabled {
  opacity: .5;
}

input:focus, .textinput:focus, .textinput.focus, select:focus, textarea:focus {
  .input_focus;
}

input[type=checkbox], input[type=radio] {
  position: absolute;
  opacity: 0;

  + label {
    position: relative;
    cursor: pointer;
    margin-left: @sizeCheckbox+4px;

    &:before {
      position: absolute;
      content: "";
      display: block;
      width: @sizeCheckbox;
      height: @sizeCheckbox;
      background-color: @colorBgEmphasize1;
      top: 50%;
      left: -(@sizeCheckbox+4px);
      margin-top: -@sizeCheckbox/2;
      border: 1px solid @colorFgBorderEmphasize3;
    }
  }

  &:hover, &:focus {
    &:not(:disabled) + label:before {
      .input_focus;
    }
  }

  &:checked + label:before {
    background-color: lighten(@colorNotice, 15);
    border-color: lighten(@colorNotice, 15);
  }

  &:disabled + label {
    opacity: .5;
  }
}

input[type=radio] {
  &:checked + label:before {
    box-shadow: inset 0 0 0 .2em @colorBgEmphasize1;
  }

  + label {
    &:before {
      border-radius: 50%;
    }
  }
}

input[type=checkbox] {
  &:checked + label:before {
    background-image: image('checkbox.svg');

    html.no-svg & {
      background-image: image('checkbox.png');
    }
    .background-size(contain);
  }

  + label {
    &:before {
      border-radius: 20%;
    }
  }
}

.formField, .formAction {
  max-width: 100%;
  padding: 6px;
}

.formField {
  > label {
    color: @colorFgLinkSubtle;
    font-weight: bold;
    padding-left: 2px;

    @media (min-width: 600px) {
      width: 100px;
      float: left;
      padding-top: (@heightInputText - @fontSize * @fontLineHeight) / 2;
      text-align: right;
    }

    &:after {
      content: ":";
    }

    .CM_FormField_Abstract {
      float: left;
      margin-right: 3px;
    }
  }

  > .input {

    @media (min-width: 600px) {
      margin-left: 110px;
    }
  }

  &.noLabel > .input {
    margin-left: 0;
  }
}

.formAction {
  text-align: right;

  .formAction-alternatives {
    float: left;
  }
}

.messages {
  display: block;

  .formField-error {
    display: none;
    color: @colorError;
    padding: 2px;
  }
}
