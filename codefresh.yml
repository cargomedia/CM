version: '1.0'
steps:

  build-cm:
    type: build
    dockerfile: ./docker/build/Dockerfile.cm
    image-name: 'ci/cm-application'

  build-elasticsearch:
    type: build
    dockerfile: ./docker/build/Dockerfile.elasticsearch
    image-name: 'ci/elasticsearch'

  build-mongo:
    type: build
    dockerfile: ./docker/build/Dockerfile.mongo
    image-name: 'ci/mongo'

  build-mysql:
    type: build
    dockerfile: ./docker/build/Dockerfile.mysql
    image-name: 'ci/mysql'

  build-redis:
    type: build
    dockerfile: ./docker/build/Dockerfile.redis
    image-name: 'ci/redis'

  test-services:
    title: Test CM application
    type: composition
    composition: ./docker-compose.test.yml
    composition_candidates:
      cm:
        image: cargomedia/cm-application:latest
        command: '/app/cm/ci/test.sh'
        working_dir: /app/cm
        volumes:
          - ${{main_clone}}:/app/cm:rw,cached
          - ${{main_clone}}/resources/config/_test.docker.php:/app/cm/resources/config/test.docker.php
          - ${{main_clone}}/resources/config/_local.docker.php:/app/cm/resources/config/local.docker.php
          - ${{main_clone}}/docker/config/php:/usr/local/etc/php
          - data-cm:/app/cm/data
